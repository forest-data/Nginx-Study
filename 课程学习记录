NGINX 是一个服务器软件  > 所以要强到高并发的配置

1. nginx基本概念
    nginx是什么，做什么事情？
    反向代理
    负载均衡
    动静分离

2. nginx安装、常用命令 和 配置文件
    在linux系统中安装nginx
    nginx 常用命令
    nginx 配置文件

3. nginx配置实例 1-反向代理

4. nginx配置实例 2-负载均衡

5. nginx配置实例 3-动静分离

6. nginx配置高可用集群

7. nginx工作原理

#### 一、基本概念
1. 什么是nginx ?
Nginx (engine x) 是一个高性能的HTTP和反向代理web服务器，同时也提供了IMAP/POP3/SMTP服务。
特点是占有内存少，并发能力强
Nginx 专为性能优化而开发，性能是其最重要的考量,实现上非常注重效率 ，能经受高负载的考验,有报告表明能支持高达 50,000 个并发连接数。

#
2.
正向代理: 依赖代理服务器进行网络访问.   正向代理代理客户端，使客户端可以进行网络访问。

为什么大陆不能直接访问https://www.google.com/   ?
因为被墙了，所以需要通过代理服务器。 也就是要 在客户端浏览器配置代理服务器,再通过代理服务器访问谷歌网址。

长城防火墙
中国网友所说的“被墙”即指网站内容被防火长城所屏蔽或者指服务器的通讯被封阻，“翻墙”也被引申为突破网络审查浏览中国大陆境外被屏蔽的网站或使用服务的行为。

反向代理:
反向代理代理服务器，客户端无需配置即可访问服务器。 暴露代理服务器地址，隐藏真实服务器ip地址。

疑问？  反向代理服务器如何才能锁定到真实服务器呢？ 该如何配置呢？

3. 负载均衡: 通过反向代理服务器将15个请求，平均分配到3台服务器上。

单个服务器解决不了，我们增加服务器的数量，然后将请求分发到各个服务器上，将原先请求集中到单个服务器上的情况改为将请求分发到多个服务器上，
将负载分发到不同的服务器，也就是我们所说的负载均衡

疑问？  负载均衡是如何将多个请求分配给不同的服务器的呢？ 如何配置的呢？

Nginx == 反向代理服务器

4. 动静分离: 把动态资源(jsp, servlet) 和 静态资源(html,css,js) 分离。 目的：就是为了解决服务器压力， 避免访问静态资源也去访问tomcat,访问动态资源也去访问tomcat。
为了加快网站的解析速度，可以把动态页面和静态页面由不同的服务器来解析，加快解析速度。降低原来单个服务器的压力。

疑问？ 它怎么知道请求是动态资源还是静态资源呢？

5. 高可用


#### 二、具体实现 >

##nginx 安装
nginx 是一个服务器软件，所以先得安装。 安装在linux系统中，才能发挥最大效率。

ifconfig  >  显示ip地址
1. 通过 xshell 远程连接工具，连接linux
2. https://nginx.org/download/
3. 解压：tar –xvf pcre-8.37.tar.gz
4. 安装：    ./configure
            make && make install

5. 启动：nginx

mac 安装    https://www.jianshu.com/p/fae1c72e2b6e

./configure是用来检测你的安装平台的目标特征的。
make是用来编译的，它从Makefile中读取指令，然后编译。
make install是用来安装的，它也从Makefile中读取指令，安装到指定的位置。

##
ps -ef | grep nginx   # 查看nginx状态

Linux nohup实现后台运行程序及查看

终端命令的方式查看端口情况
1.查看端口被哪个程序占用
     sudo lsof -i tcp:port
    如： sudo lsof -i tcp:8082
2.看到进程的PID，可以将进程杀死。
   sudo kill -9 PID
  如：sudo kill -9 3210


## nginx命令
进入 nginx 目录中

cd	/usr/local/nginx/sbin

1、查看 nginx 版本号
./nginx -v

2、启动 nginx
./nginx

3、停止 nginx
./nginx	-s	stop

4、重新加载 nginx
./nginx -s reload


## nginx配置文件     https://www.nginx.cn/doc/

1. 配置文件位置
cd /usr/local/nginx/conf/nginx.conf

2. 配置文件由哪几部分组成
vi nginx.conf

(1) nginx由3部分组成

第一部分：全局块

第二部分：event块

第三部分：http块
http块 包含 http全局块 + server块


#### 三、nginx配置实例 1-反向代理
1. 实现效果1
使用 nginx 反向代理，访问 www.123.com 直接跳转到 127.0.0.1:8080

浏览器输入域名 > 到本地host文件中看是否有相应的配置,如果没有到网络上找dns域名解析器，找网络ip

mac hosts 在哪？  >   /etc/hosts

tomcat默认端口  >  8080

注意： 为什么 mac上 配置hosts文件, 未关代理, 浏览器不能直接通过域名访问, 关代理后, 就可以通过域名访问相应web ?
      原因有可能是dns不走本地hosts,而是走代理服务器，也就是去网络上解析对应的域名，结果在网络上并未解析出来，因此访问不了。


hosts文件
192.168.17.129    www.123.com
左边是IP地址        右边是域名

nginx.conf
server {
        listen       80;    # 表示nginx目前监听的端口号是 80 端口
        server_name  192.168.17.129;    # 改成我们的IP
        location / {
            proxy_pass http:127.0.0.1:8080;    # 通过IP地址192.168.17.129，跳转到tomcat8080端口中去。
        }
}


2. 实现效果2
使用 nginx 反向代理，根据访问的路径跳转到不同端口的服务中
nginx 监听端口为 9001，
访问 http://192.168.17.129:9001/edu/ 直接跳转到 127.0.0.1:8080
访问 http:// 192.168.17.129:9001/vod/ 直接跳转到 127.0.0.1:8081


server {
        listen       9001;   # 监听9001端口
        server_name  192.168.17.129;    # IP

        location ~ /edu/ {
            proxy_pass http:127.0.0.1:8080;    # 通过IP地址192.168.17.129，跳转到tomcat8080端口中去。
        }

        location ~ /vod/ {
            proxy_pass http:127.0.0.1:8081;    # 通过IP地址192.168.17.129，跳转到tomcat8081端口中去。
        }
}

注意：location中的 ~ 表示url包含正则表达式，并且区分大小写



#### 四、niginx配置实例 2-负载均衡
实现效果
浏览器地址栏输入地址 http://192.168.17.129/edu/a.html，负载均衡效果，平均 8080
和8081 端口中

nginx.conf
# 这里表示已进行负载均衡服务器列表  tomcat服务器

upstream myserver{
    ip_hash;
    server 192.168.17.129:8080 weight=1;
    server 192.168.17.129:8180 weight=1;
}
server {
        listen       80;    # 表示nginx目前监听的端口号是 80 端口
        server_name  192.168.17.129;    # 浏览器中输入的IP
        location / {
            proxy_pass http://myserver;
            root   html;
            index  index.html index.htm;

        }
}


#### 五、niginx配置实例 动静分离
动态资源请求：可以通过tomcat,用我们的操作中 数据库实现
静态请求： 请求html文件，得到图片地址。这种请求就是静态请求。
动静分离>  把动态请求和静态请求通过nginx分离出来，让他们不同请求去访问不同内容，动态请求tomcat,静态访问静态资源服务器。
目的：提高访问效率，减少服务器压力

location /www/ {
    root   /data/;
    index  index.html index.htm;
}

location /image/ {
    root   /data/;
    autoindex on;   # 因为配置文件 autoindex on 列出文件夹中的内容
}


#### 五、niginx配置实例 高可用
什么叫高可用？ 服务器挂掉了，依然可以正常进行请求。
主从方式


# Nginx 原理
